var t=Object.defineProperty,e=(e,s,i)=>(((e,s,i)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i})(e,"symbol"!=typeof s?s+"":s,i),i);import{P as s}from"./phaser.39311b5c.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),"use-credentials"===t.crossorigin?e.credentials="include":"anonymous"===t.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();class i extends Phaser.Scene{constructor(){super("Boot")}preload(){this.load.setPath("./assets")}create(){this.scene.start("Preload")}}class n extends Phaser.Scene{constructor(){super("Preload")}preload(){this.load.setPath("./assets"),this.load.image("background","background.png"),this.load.image("banana","banana.png"),this.load.image("cherry","cherry.png"),this.load.image("apple","apple.png"),this.load.image("orange","orange.png"),this.load.image("mango","mango.png"),this.load.image("pineapple","pineapple.png"),this.load.image("brush","brush.png"),this.load.image("flare","flare.png"),this.load.spritesheet("scratch-particles","scratch-particles.png",{frameWidth:26,frameHeight:17,startFrame:0,endFrame:3})}create(){this.scene.start("Play")}loadAudio(t){this.load.audio(t,[".mp3",".ogg",".m4a"].map((e=>`${t}${e}`)))}}const h=t=>{const{height:e,width:s}=t.scale;return{height:e,width:s,center:{x:s/2,y:e/2}}};class a{constructor(t){e(this,"ctx"),e(this,"_currentAngle"),e(this,"_bristleStrokeWidth"),e(this,"_bristles"),e(this,"_lineWidth"),e(this,"lastPosition"),e(this,"position"),this.ctx=t,this._bristleStrokeWidth=100,this._lineWidth=50,this._bristles=this.makeBristles(this._bristleStrokeWidth),this.lastPosition={x:0,y:0},this.position={x:0,y:0}}setInit({x:t,y:e}){this.lastPosition={x:t,y:e},this.position={x:t,y:e}}startLine(t){this.ctx.beginPath(),this.ctx.strokeStyle="black",this.ctx.lineWidth=null!=t?t:this._lineWidth,this.ctx.lineJoin=this.ctx.lineCap="round",this.ctx.moveTo(this.position.x,this.position.y)}updateMousePosition({x:t,y:e}){this.lastPosition={...this.position},this.position={x:t,y:e}}drawImage(t){const e=this.getNewAngle(this.lastPosition,this.position,this._currentAngle);this.ctx.save(),this.ctx.translate(this.position.x,this.position.y),this.ctx.rotate(e),this.ctx.drawImage(t,-t.width/2,-t.height/2,2*t.width,2*t.height)}drawLine(t){t&&(this.position.x=this.position.x+t.x,this.position.y=this.position.y+t.y),this.ctx.filter="blur(1px)",this.ctx.lineTo(this.position.x,this.position.y),this.ctx.stroke()}drawBristles(t){t&&(this.position.x=this.position.x+t.x,this.position.y=this.position.y+t.y);const e=this._currentAngle,s=this.getNewAngle(this.lastPosition,this.position,e);this._bristles.forEach((t=>{this.ctx.beginPath();const i=this.rotatePoint(t.distance-this._bristleStrokeWidth/2,e,this.lastPosition);let n=this.rotatePoint(t.distance-this._bristleStrokeWidth/2,s,this.position);const h=this.rotatePoint(t.distance-this._bristleStrokeWidth/2,s,this.lastPosition);n=this.rotatePoint(t.distance-this._bristleStrokeWidth/2,s,this.position),this.drawBristleStroke(this.ctx,i,n,t,h)}),this)}drawBristleStroke(t,e,s,i,n){t.beginPath(),t.moveTo(e[0],e[1]),t.strokeStyle=i.color,t.lineWidth=i.thickness,t.lineCap="round",t.lineJoin="round",t.shadowColor=i.color,t.shadowBlur=i.thickness/2,t.quadraticCurveTo(n.x,n.y,s.x,s.y),t.lineTo(s[0],s[1]),t.stroke()}makeBristles(t=40){const e=[],s=Math.round(t/3),i=t/s;for(let n=0;n<s;n++){const t=0===n?0:i*n+Math.random()*i/2-i/2;e.push({distance:t,thickness:2*Math.random()+2,color:"#000000"})}return e}rotatePoint(t,e,s){return{x:s.x+t*Math.cos(e),y:s.y+t*Math.sin(e)}}getNewAngle(t,e,s){const i=this.getBearing(t,e);return r(s)?i:s-this.angleDiff(s,i)}getBearing(t,e){return(Math.atan2(e.y-t.y,e.x-t.x)-Math.PI/2)%(2*Math.PI)}angleDiff(t,e){const s=2*Math.PI,i=(t-(e>0?e:e+s)+Math.PI)%s-Math.PI;return i<-Math.PI?i+s:i}}const r=t=>null==t,o="SCRATCHED",c="SCRATCH_PERCENT_INCREASED",l="ITEM_COMPLETED";class d extends Phaser.GameObjects.Group{constructor(t,s){super(t),e(this,"canvas"),e(this,"context"),e(this,"brush"),e(this,"brushImage"),e(this,"image"),e(this,"position",{x:0,y:0}),e(this,"isDown",!1),e(this,"isAutoScratching",!1),e(this,"scratchParticles"),t.add.existing(this),this.init(s)}init(t){const e=this.scene.textures.get(t).getSourceImage();this.brushImage=this.scene.textures.get("brush").getSourceImage();const{height:s,width:i}=h(this.scene);this.canvas=this.scene.textures.createCanvas("scratch-cover",i,s),this.context=this.canvas.getContext(),this.context.drawImage(e,0,0,i,s),this.canvas.update(),this.image=this.scene.add.image(0,0,"scratch-cover").setOrigin(0,0).setDepth(1).setInteractive(),this.add(this.image),this.brush=new a(this.context),this.image.on("pointerdown",(t=>{this.position={x:t.x,y:t.y},this.brush.setInit(this.position),this.brush.startLine()}),this),this.image.on("pointermove",(t=>{this.position={x:t.x,y:t.y},this.brush.updateMousePosition(this.position),t.isDown&&this.scratch()}),this),this.scratchParticles=this.scene.add.particles(0,0,"scratch-particles",{frame:[0,1,2,3],lifespan:1e3,tint:[16776960],speed:{min:50,max:250},scale:{start:1,end:.1},rotate:{start:0,end:360},gravityY:200,frequency:20,alpha:{min:1,max:0},x:200,y:200,emitting:!1}).setDepth(2),this.scene.events.on(c,((t,e)=>{let s="medium";e>.1?s="large":e<.03&&(s="small"),this.fireParticles(t,s)}),this),this.scene.events.on(l,this.handleAutoScratch,this)}fireParticles(t,e){let s=3;switch(e){case"small":s=1.5;break;case"large":s=6}this.scratchParticles.emitParticleAt(t.x,t.y,s)}scratch(){this.context.globalCompositeOperation="destination-out",this.context.save(),this.brush.drawLine(),this.context.restore(),this.canvas.update(),this.scene.events.emit(o,this.position)}plotAutoScratchLines(t){const e=[],s=[],i=15,n=t.height/5,h=t.width/5;let a=t.y+n,r=i+t.x,o=!0;do{const c=new Phaser.Math.Vector2({x:i+t.x,y:a});r+=h;const l=new Phaser.Math.Vector2({x:r,y:t.y+i});s.push(c),s.push(l),e.push({start:c,end:l}),a+=n,a>t.y+t.height-i&&(o=!1)}while(o);o=!0,r=t.x+h,a=t.y;do{const c=new Phaser.Math.Vector2({x:r,y:t.y+t.height-i});a+=n;const l=new Phaser.Math.Vector2({x:t.x+t.width-i,y:a});s.push(c),s.push(l),e.push({start:c,end:l}),r+=h,r>t.x+t.width-i&&(o=!1)}while(o);return[e,s]}debugAutoScratchLinesPath(t){const e=this.scene.add.graphics().setDepth(4);e.lineStyle(1,16777215),e.moveTo(t[0].start.x,t[0].start.y),e.beginPath();for(const s of t)e.lineTo(s.start.x,s.start.y),e.lineTo(s.end.x,s.end.y);e.strokePath()}handleAutoScratch(t){this.isAutoScratching=!0;const[e,s]=this.plotAutoScratchLines(t);this.brush.setInit(e[0].start),this.brush.startLine();let i=0;for(let n=0;n<e.length;n++){const t=e[n],s=.8*this.getLineDistance(t);this.scene.tweens.add({targets:t.start,x:t.end.x,y:t.end.y,delay:i,ease:"Linear",duration:s,onUpdate:(t,e,s)=>{"y"===s&&(this.brush.updateMousePosition(e),this.context.globalCompositeOperation="destination-out",this.context.save(),this.brush.drawLine(),this.context.restore(),this.canvas.update(),this.fireParticles(e,"small"))},onComplete:()=>{n===e.length-1&&(this.isAutoScratching=!1)}}),i+=s}}getLineDistance(t){const e=t.end.x-t.start.x,s=t.end.y-t.start.y;return Math.sqrt(e*e+s*s)}}class p extends Phaser.Physics.Arcade.Sprite{constructor(t){super(t,0,0,"banana"),e(this,"textureKey"),e(this,"percentComplete",0),e(this,"autoCompletePercent",40),this.textureKey="",t.add.existing(this),t.physics.add.existing(this)}get isComplete(){return 100===this.percentComplete}setItem(t){this.textureKey=t,this.setTexture(t,0)}clearItem(){this.textureKey=""}checkComplete(t){if(this.isComplete)return this.percentComplete;let e=0;const s=this.getBounds(),i=t.getImageData(s.x,s.y,s.width,s.height),n=i.data.length;for(let a=0;a<n;a+=4)0===i.data[a]&&0===i.data[a+1]&&0===i.data[a+2]&&0===i.data[a+3]&&e++;const h=e>=1?e/(s.width*s.height)*100:0;if(this.percentComplete=h,this.percentComplete>this.autoCompletePercent){const t=this.getBounds();this.percentComplete=100,this.scene.events.emit(l,t);const e=this.scene.add.particles(0,0,"flare",{speed:50,lifespan:1e3,quantity:4,radial:!0,scale:{start:.4,end:0},emitZone:new Phaser.GameObjects.Particles.Zones.EdgeZone(t,42),duration:500,emitting:!1}).setDepth(4);this.scene.tweens.add({targets:this,duration:300,delay:600,onStart:()=>{e.start()},scale:1.2*this.scale,yoyo:!0,repeat:1,onComplete:()=>{e.stop()}})}return h}}class g extends Phaser.GameObjects.Group{constructor(t,s){super(t),e(this,"scratchContext"),e(this,"data"),e(this,"itemKeys",["banana","cherry","apple","mango","orange","pineapple"]),e(this,"winPercentage",.5),e(this,"winnerKey"),this.scratchContext=s,t.add.existing(this),this.init()}get itemsComplete(){return this.data?Object.keys(this.data).reduce(((t,e)=>this.data[e].isComplete?t+1:t),0):0}init(){this.data={p1_1:new p(this.scene),p1_2:new p(this.scene),p1_3:new p(this.scene),p2_1:new p(this.scene),p2_2:new p(this.scene),p2_3:new p(this.scene),p3_1:new p(this.scene),p3_2:new p(this.scene),p3_3:new p(this.scene)};const{width:t,height:e}=h(this.scene),s=t/3,i=e/3;this.generate();for(const n in this.data){const t=this.data[n];t.setDisplaySize(s,i),this.add(t,!0)}Phaser.Actions.GridAlign(this.getChildren(),{width:3,height:3,position:Phaser.Display.Align.CENTER,cellWidth:s,cellHeight:i}),this.scene.events.on(o,(t=>{let e=0,s=0;const i=new Phaser.Geom.Rectangle(t.x-25,t.y-25,50,50);for(const n in this.data){const t=this.data[n];e+=t.percentComplete,!t.isComplete&&Phaser.Geom.Intersects.RectangleToRectangle(i,t.getBounds())?s+=t.checkComplete(this.scratchContext):s+=t.percentComplete}s/=9,e/=9,s>e&&this.scene.events.emit(c,t,s-e)}))}generate(){Math.random()<this.winPercentage?this.generateWin():this.generateLose()}generateWin(){this.resetData();const t=this.resolveRandomItemKey(),e=Object.keys(this.data),s=[];for(let i=0;i<3;i++){const t=Math.floor(Math.random()*e.length);s.push(e[t]),e.splice(t,1)}s.forEach((e=>{this.data[e].setItem(t)})),this.tryFillGrid(1,[t])||this.generateWin()}generateLose(){this.resetData(),this.tryFillGrid(0)||this.generateLose()}tryFillGrid(t,e=[]){let s=!0;const i=()=>this.checkWinCount()>t;for(const n in this.data){const t=this.data[n];if(!t.textureKey){const n=[...e];do{t.setItem(this.resolveRandomItemKey(n)),i()&&n.push(t.textureKey),n.length===this.itemKeys.length&&(s=!1)}while(i()&&s)}if(!s)break}return s}checkWinCount(){const t=Object.keys(this.data).reduce(((t,e)=>{const s=this.data[e].textureKey;return s&&(t[s]||(t[s]=0),++t[s]),t}),{});return Object.keys(t).filter((e=>t[e]>=3)).length}resetData(){Object.keys(this.data).forEach((t=>{this.data[t].clearItem()}),this)}resolveRandomItemKey(t){const e=(null==t?void 0:t.length)>0?this.itemKeys.filter((e=>!t.includes(e))):this.itemKeys;return e[Math.floor(Math.random()*e.length)]}}class u extends Phaser.Scene{constructor(){super("Play"),e(this,"cover"),e(this,"grid")}get height(){return this.scale.height}get width(){return this.scale.width}get center(){return{x:this.width/2,y:this.height/2}}create(){this.cover=new d(this,"background"),this.grid=new g(this,this.cover.context)}}const m={type:s.AUTO,width:800,height:800,max:{width:800,height:800},min:{width:350,height:350},parent:"game-container",pixelArt:!0,autoFocus:!0,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH,fullscreenTarget:"game-container",parent:"game-container"},scene:[i,n,u]};new s.Game(m);
